

FIX factorial := F(n, ^n) [n > 1] {
	n := n * factorial(n - 1)
}

answer := factorial(5)


EOF

// TODO
LOOP i [i < 10] +1 {
	DONE LOOP
}

// TODO
LOOP list -> i, v, m {
}

// TODO
@P(`x: `, 1 + 2, "\n")
@PL(list)

// TODO: NUMBER: float64 -> NUMBER: Float

// TODO: Prepend assignments with LET
LET x := 1

// MAYBE: Keywords be case-insensitive

// TODO: Access using expression
list[1 + 2] := `:)`

// TODO
s := "alpha = {list[0]}, beta = {list[1]}"

// MAYBE: = -> ==
// MAYBE: # -> !=

// MAYBE
increment := E(n) n + 1

// MAYBE
list[0] := _ // Removes the item from the list
x := list[>>] // Take last item
x := list[<<] // Take first item
list[>>] := 4 // Append to end
list[<<] := 0 // Append to front

// MAYBE
p := "key": "value"
k, v := p[K], p[V]

// MAYBE
@cd(`./scarlet-go`)
@cd(`..`)
@pushd(`./scarlet-go`)
$ `go build -o` filename `scarlet.go`
@popd()
build := E(file) $ `go build -o` file `scarlet.go`

