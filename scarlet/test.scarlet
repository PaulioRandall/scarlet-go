

a := F(b,^b, ^c) [b<9] {
	b := b+1
}

a, b := a(10)


naught_six := 2 * 9 / (3 + 12) * 2 / 4

a_true := 2 * 6 % 8 < 8 / (2 + 1) = FALSE
//       ((2 * 6) % 8) < (8 / (2 + 1)) = FALSE



list := LIST {1,2,3}
a := list[0]
b := list[1]
list[2] := `:)`



FIX factorial := F(n, ^n) [n > 1] {
	n := n * factorial(n - 1)
}

answer := factorial(5)


EOF



// TODO
// list[2] := _

// TODO
s := "alpha = {list[0]}, beta = {list[1]}"

// TODO
LOOP i [i < 10] +1 {
	DONE LOOP
}

// TODO
LOOP list -> i, v, m {
}

// TODO
@Println(list)



// MAYBE
increment := E(n) n + 1

// MAYBE
x := list[>] // Take last item
x := list[<] // Take first item
list[>] := 4 // Append to end
list[<] := 0 // Append to front

// MAYBE
p := "key": "value"
k, v := p[K], p[V]
