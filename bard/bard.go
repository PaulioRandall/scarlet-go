package bard

import (
	"fmt"

	"github.com/PaulioRandall/scarlet-go/token"
)

// Bard is an panic catcher and error message printer.
type Bard interface {

	// NightmareCatcher catches panics generated by the argument function and
	// prints them according to the specific Bards rules.
	NightmareCatcher(func())
}

// nightmare is an error that holds additional information to tie it to a line
// and possible column in some source code.
type nightmare struct {
	error
	msg   string
	args  []interface{}
	tk    token.Token
	cause error
}

// Error satisfies the error interface.
func (e nightmare) Error() string {
	return fmt.Sprintf(e.msg, e.args...)
}

// PanicTok invokes a panic containing enough information to match the error to
// the source code. The panic is designed to be recovered by a Bard which will
// print the error message in an appropriate form.
func PanicTok(tk token.Token, msg string, args ...interface{}) {
	PanicErr(nil, tk, msg, args...)
}

// PanicErr invokes a panic containing enough information to match the error to
// the source code. The panic is designed to be recovered by a Bard which will
// print the error message in an appropriate form.
func PanicErr(cause error, tk token.Token, msg string, args ...interface{}) {
	e := nightmare{
		msg:   msg,
		args:  args,
		cause: cause,
	}

	panic(e)
}
