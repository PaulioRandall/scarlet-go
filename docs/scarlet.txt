
def divideAndFmt := F(a, b -> r, e) {
	watch e {
		[b == 0] e := "Can't divide by zero"
		r, e := @FmtNum(a / b, ".##")
	}
}

def parseArgs := F(args, -> a, b, e) {
	watch e {
		[@Len(args) < 3] e := "Need at least two number arguments"
		a, e := @ParseNum(args[1])
		b, e := @ParseNum(args[2])
	}
}

calc := F(-> e) watch e {
	a, b, e := parseArgs(@Args())
	r, e := divideAndFmt(a, b)
	@Println("{a} / {b} = {r}")
}

loop @Args() -> i, v, m {
	@Println(v)
}

e := calc()
[e?] exit 1

when x := 1 + 2 {
	0:       a := `even`
	1:       a := `odd`
	[x < 0]: a := `error`
	2:       a := `even`
	[true]:  a := `meh`
}

list := @List(
	`abc`,
	3,
)

map := @Map(
	a, 1,
	b, 2,
)

exit 0
